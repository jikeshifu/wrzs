{"remainingRequest":"D:\\coding\\wrzs\\wrzs_storemanagement\\node_modules\\thread-loader\\dist\\cjs.js!D:\\coding\\wrzs\\wrzs_storemanagement\\node_modules\\babel-loader\\lib\\index.js!D:\\coding\\wrzs\\wrzs_storemanagement\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\coding\\wrzs\\wrzs_storemanagement\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\coding\\wrzs\\wrzs_storemanagement\\src\\views\\store-manage\\device-manage\\device-manage-index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\coding\\wrzs\\wrzs_storemanagement\\src\\views\\store-manage\\device-manage\\device-manage-index.vue","mtime":1689090817694},{"path":"D:\\coding\\wrzs\\wrzs_storemanagement\\babel.config.js","mtime":1686935646926},{"path":"D:\\coding\\wrzs\\wrzs_storemanagement\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686936409160},{"path":"D:\\coding\\wrzs\\wrzs_storemanagement\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1686936409160},{"path":"D:\\coding\\wrzs\\wrzs_storemanagement\\node_modules\\babel-loader\\lib\\index.js","mtime":1686936409992},{"path":"D:\\coding\\wrzs\\wrzs_storemanagement\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686936409160},{"path":"D:\\coding\\wrzs\\wrzs_storemanagement\\node_modules\\vue-loader\\lib\\index.js","mtime":1686936410308}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}