{"remainingRequest":"D:\\coding\\wrzs\\wrzs_storemanagement\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\coding\\wrzs\\wrzs_storemanagement\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\coding\\wrzs\\wrzs_storemanagement\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\coding\\wrzs\\wrzs_storemanagement\\src\\views\\store-manage\\dcard-manage\\dcard-manage-index.vue?vue&type=template&id=27fa67d0&scoped=true&","dependencies":[{"path":"D:\\coding\\wrzs\\wrzs_storemanagement\\src\\views\\store-manage\\dcard-manage\\dcard-manage-index.vue","mtime":1686935646981},{"path":"D:\\coding\\wrzs\\wrzs_storemanagement\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686936409160},{"path":"D:\\coding\\wrzs\\wrzs_storemanagement\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1686936410643},{"path":"D:\\coding\\wrzs\\wrzs_storemanagement\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686936409160},{"path":"D:\\coding\\wrzs\\wrzs_storemanagement\\node_modules\\vue-loader\\lib\\index.js","mtime":1686936410308}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}